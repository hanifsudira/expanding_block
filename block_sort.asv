function block = block_sort(block, varargin)
% sorts lexigraphically blocks by average gray value or variance
% input: block_sort(block, 'variance') sorts by variance
assert(isa(block, 'block'), ['first input is a %s'...
    'must be a BLOCK object'], class(block))


col = @(t) reshape(t, N, 1);


N = numel(block.pixel);
pixels = col(block.pixels);
avg_gray = col(avg_gray);
variance = col(variance);
x = col(block.x);
y = col(block.y);
key = col(1:N);
if nargin>1 && strcmp(varargin{1}, 'variance')
    sort = [variance, y, x, key, avg_gray];
    block.variance = sort(1, :);
    block.avg_gray = sort(5, :);
elseif nargin>1
    error('Second argument: %s, must be "variance" or blank')
else
    sorted = sortrows([avg_gray, y, x, key, variance]);
    block.avg_gray = sort(1, :);
    block.variance = sort(5, :);
%end
block.x = sorted(3, :);
block.y = sorted(2, :);
for n=1:N
    block.pixels(n) = pixels
end